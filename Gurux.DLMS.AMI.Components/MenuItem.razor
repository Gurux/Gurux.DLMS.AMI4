<!--
// --------------------------------------------------------------------------
//  Gurux Ltd
//
//
//
// Filename:        $HeadURL$
//
// Version:         $Revision$,
//                  $Date$
//                  $Author$
//
// Copyright (c) Gurux Ltd
//
//---------------------------------------------------------------------------
//
//  DESCRIPTION
//
// This file is a part of Gurux Device Framework.
//
// Gurux Device Framework is Open Source software; you can redistribute it
// and/or modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2 of the License.
// Gurux Device Framework is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// This code is licensed under the GNU General Public License v2.
// Full text may be retrieved at http://www.gnu.org/licenses/gpl-2.0.txt
//---------------------------------------------------------------------------
-->

@code {
    [CascadingParameter]
    private MenuControl? Parent { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public string? Text { get; set; }

    [Parameter]
    public string? Icon { get; set; }

    //Is menu item read-only.
    public bool ReadOnly { get; set; }

    [Parameter]
    public Action? OnClick { get; set; }

    protected override void OnInitialized()
    {
        if (Parent == null)
            throw new ArgumentNullException(nameof(Parent), "MenuItem must exist within a MenuControl");
        base.OnInitialized();
        Parent.AddMenuItem(this);
    }

    //Create menu item.

    public static MenuItem Create(string text, string icon, Action action)
    {
        return Create(text, icon, action, false);
    }

    //Create menu item.
    public static MenuItem Create(string text, string icon, Action action, bool readOnly)
    {
        MenuItem ret = new MenuItem();
        ret.Text = text;
        ret.Icon = icon;
        ret.OnClick += action;
        ret.ReadOnly = readOnly;
        return ret;
    }
}