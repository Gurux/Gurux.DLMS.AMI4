<!--
// --------------------------------------------------------------------------
//  Gurux Ltd
//
//
//
// Filename:        $HeadURL$
//
// Version:         $Revision$,
//                  $Date$
//                  $Author$
//
// Copyright (c) Gurux Ltd
//
//---------------------------------------------------------------------------
//
//  DESCRIPTION
//
// This file is a part of Gurux Device Framework.
//
// Gurux Device Framework is Open Source software; you can redistribute it
// and/or modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2 of the License.
// Gurux Device Framework is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// This code is licensed under the GNU General Public License v2.
// Full text may be retrieved at http://www.gnu.org/licenses/gpl-2.0.txt
//---------------------------------------------------------------------------
-->


@code {
    [CascadingParameter]
    private ContextMenuController? Parent { get; set; }
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
   
    /// <summary>
    /// Context menu item text.
    /// </summary>
    [Parameter]
    public string Text { get; set; } = "";

    /// <summary>
    /// Context menu item Url.
    /// </summary>
    [Parameter]
    public string Url{ get; set; } = "";

    /// <summary>
    /// Context menu item icon.
    /// </summary>
    [Parameter]
    public string? Icon { get; set; }

    /// <summary>
    /// Invoked on click event.
    /// </summary>
    [Parameter]
    public Action? OnClick { get; set; }

    /// <summary>
    /// Invoke the click event.
    /// </summary>
    public void Click()
    {
        OnClick?.Invoke();
        Parent?.Hide();
    }

    /// <summary>
    /// Initialize context menu.
    /// </summary>
    protected override void OnInitialized()
    {
        if (Parent == null)
            throw new ArgumentNullException(nameof(Parent), "MenuItem must exist within a ContextMenuController");
        base.OnInitialized();
        Parent.AddMenuItem(this);
    }
}