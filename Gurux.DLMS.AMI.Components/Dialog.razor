<!--
// --------------------------------------------------------------------------
//  Gurux Ltd
//
//
//
// Filename:        $HeadURL$
//
// Version:         $Revision$,
//                  $Date$
//                  $Author$
//
// Copyright (c) Gurux Ltd
//
//---------------------------------------------------------------------------
//
//  DESCRIPTION
//
// This file is a part of Gurux Device Framework.
//
// Gurux Device Framework is Open Source software; you can redistribute it
// and/or modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2 of the License.
// Gurux Device Framework is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// This code is licensed under the GNU General Public License v2.
// Full text may be retrieved at http://www.gnu.org/licenses/gpl-2.0.txt
//---------------------------------------------------------------------------
-->

<div class="modal fade show d-block" id="confirmanceModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmanceModalLabel">@Title</h5>
                <button type="button" class="btn btn-close"
                        data-dismiss="modal" aria-label="Close"
                        onclick="@(() => Cancel())">
                </button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            <div class="modal-footer">
                @if (OnOk != null)
                {
                    <button type="button" class="btn btn-primary"
                            data-dismiss="modal" onclick="@(() => Ok())">
                        @OkButtonTitle
                    </button>
                }
                @if (OnCancel != null)
                {
                    <button type="button" class="btn btn-secondary"
                            data-dismiss="modal" onclick="@(() => Cancel())">
                        @CancelButtonTitle
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@code
{
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    /// <summary>
    /// User has accept the action.
    /// </summary>
    [Parameter]
    public Action? OnOk { get; set; }

    /// <summary>
    /// User has Cancel the action.
    /// </summary>
    [Parameter]
    public Action? OnCancel { get; set; }

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public string OkButtonTitle { get; set; } = "Save";

    [Parameter]
    public string CancelButtonTitle { get; set; } = "Cancel";

    /// <summary>
    /// User has accept the action.
    /// </summary>
    private void Ok()
    {
        OnOk?.Invoke();
    }

    /// <summary>
    /// User has Cancel the action.
    /// </summary>
    private void Cancel()
    {
        OnCancel?.Invoke();
    }
}