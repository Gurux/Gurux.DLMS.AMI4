@page "/config/scriptmanage"
@using Gurux.DLMS.AMI.Client.Pages.Script
@using Gurux.DLMS.AMI.Shared.DIs
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Gurux.DLMS.AMI.Shared.DTOs.Authentication
@using Gurux.DLMS.AMI.Shared
@using Gurux.DLMS.AMI.Shared.Enums
@using Gurux.DLMS.AMI.Shared.DTOs

@attribute [Authorize(Roles = GXRoles.Admin + "," + GXRoles.ScriptManager + "," + GXRoles.ScriptGroupManager)]
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IGXNotifier Notifier

<TabControl SelectionChanged="SelectionChanged" InitialTab="ActiveTab">
    <TabTextTemplate>
        <span class=@context.Icon aria-hidden="true"></span>
        @context.Text
    </TabTextTemplate>
    <ChildContent>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ScriptManager)>
            <TabPage Text=@Properties.Resources.Scripts Icon="oi oi-script">
                <div style="position: relative; width: 100%; ">
                    <Scripts></Scripts>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ScriptGroupManager)>
            <TabPage Text=@Properties.Resources.ScriptGroups Icon="oi oi-timer">
                <div style="position: relative; width: 100%; ">
                    <ScriptGroups></ScriptGroups>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ScriptLogManager)>
            <TabPage Text=@Properties.Resources.ScriptLogs Icon="oi oi-warning">
                <div style="position: relative; width: 100%; ">
                    <ScriptLogs></ScriptLogs>
                </div>
            </TabPage>
        </AuthorizeView>
    </ChildContent>
</TabControl>
<br />
@code {

    private int ActiveTab { get; set; } = 0;

    /// <summary>
    /// User has selected a new tab.
    /// </summary>
    /// <param name="index">Tab index.</param>
    void SelectionChanged(int index)
    {
        Notifier.RemoveLastPage();
        Notifier.UpdateData(GXPages.ScriptManage, index);
    }

    protected override void OnInitialized()
    {
        object? data = Notifier.GetData(GXPages.ScriptManage);
        if ((data is int value) && value != 0)
        {
            ActiveTab = value;
        }
        Notifier.ChangePage(GXPages.ScriptManage, data, true);
    }
}

