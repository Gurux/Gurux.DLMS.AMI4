@page "/config/modulemanage"
@using Gurux.DLMS.AMI.Client.Pages.Module
@using Gurux.DLMS.AMI.Shared.DIs
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Gurux.DLMS.AMI.Shared.DTOs.Authentication
@using Gurux.DLMS.AMI.Shared
@using Gurux.DLMS.AMI.Shared.Enums
@using Gurux.DLMS.AMI.Shared.DTOs

@attribute [Authorize(Roles = GXRoles.Admin + "," + GXRoles.ModuleManager + "," + GXRoles.ModuleGroupManager)]
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IGXNotifier Notifier

<TabControl SelectionChanged="SelectionChanged" InitialTab="ActiveTab">
    <TabTextTemplate>
        <span class=@context.Icon aria-hidden="true"></span>
        @context.Text
    </TabTextTemplate>
    <ChildContent>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ModuleManager)>
            <TabPage Text=@Properties.Resources.ModulesTitle Icon="oi oi-puzzle-piece">
                <div style="position: relative; width: 100%; ">
                    <Modules></Modules>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ModuleGroupManager)>
            <TabPage Text=@Properties.Resources.ModuleGroups Icon="oi oi-timer">
                <div style="position: relative; width: 100%; ">
                    <ModuleGroups></ModuleGroups>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin)>
            <TabPage Text="Manage" Icon="oi oi-cog">
                <div style="position: relative; width: 100%; ">
                    <ModulesManage></ModulesManage>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin)>
            <TabPage Text="Updates">
                <div style="position: relative; width: 100%; ">
                    <ModulesUpdates></ModulesUpdates>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ModuleLog)>
            <TabPage Text=@Properties.Resources.ModuleLogs Icon="oi oi-warning">
                <div style="position: relative; width: 100%; ">
                    <ModuleLogs></ModuleLogs>
                </div>
            </TabPage>
        </AuthorizeView>
    </ChildContent>
</TabControl>
<br />
@code {

    private int ActiveTab { get; set; } = 0;

    /// <summary>
    /// User has selected a new tab.
    /// </summary>
    /// <param name="index">Tab index.</param>
    void SelectionChanged(int index)
    {
        Notifier.RemoveLastPage();
        Notifier.UpdateData(GXPages.ModuleManage, index);
    }

    protected override void OnInitialized()
    {
        object? data = Notifier.GetData(GXPages.ModuleManage);
        if ((data is int value) && value != 0)
        {
            ActiveTab = value;
        }
        Notifier.ChangePage(GXPages.ModuleManage, data, true);
    }
}

