@page "/serialsettings"
@using Gurux.DLMS.AMI.Shared.DIs
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Gurux.DLMS.AMI.Shared.DTOs.Authentication
@using Gurux.DLMS.AMI.Shared.DTOs
@using Gurux.DLMS.AMI.Shared.Rest
@using Gurux.DLMS.AMI.Shared.Enums
@using Gurux.DLMS.AMI.Client.Helpers
@using Gurux.DLMS.AMI.Module

@attribute [Authorize(Roles = "Admin, ScheduleGroupManager")]
@inject IGXNotifier Notifier

<div class="row">
    <div style="width:100%">
        <div class="form-group">
            <label>Serial port</label>
            <InputText id="name" class="form-control"
                       @bind-Value="PortName" />
        </div>
    </div>
</div>
@code {
    private GXDevice? _device;
    private GXSerialTemplate _serial = new GXSerialTemplate();

    public string? PortName
    {
        get
        {
            if (_serial == null)
            {
                return null;
            }
            return _serial.PortName;
        }
        set
        {
            _serial.PortName = value;
            if (_device != null)
            {
                _device.MediaSettings = _serial.Settings;
            }
        }
    }

    protected override void OnInitialized()
    {
        try
        {
            //Get device settings.
            _device = (GXDevice?)Notifier.GetData(GXPages.Device);
            if (_device != null)
            {
                _serial.Settings = _device.MediaSettings;
            }
        }
        catch (Exception ex)
        {
            Notifier?.ProcessError(ex);
        }
    }

    //Validate serial port settings.
    public void Validate()
    {
        if (string.IsNullOrEmpty(PortName))
        {
            throw new ArgumentException("Invalid serial port.");
        }
    }
}
