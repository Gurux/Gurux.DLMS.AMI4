@page "/registerview"
@using Gurux.DLMS.AMI.Shared.DIs;
@using Gurux.DLMS.AMI.Shared.DTOs
@using System.Globalization
@using Gurux.DLMS.Enums
@using Gurux.DLMS.Objects;

@inject IGXNotifier Notifier
@if (Target != null)
{
    <CascadingValue Value="this">
        <AttributeTile Index="0" Name="@Properties.Resources.Description" Text="@Target.Template.Name"></AttributeTile>
        <AttributeTile Index="1" Name="@Properties.Resources.LogicalName" Text="@Target.Template.LogicalName"></AttributeTile>
        <AttributeTile Index="2" Attributes="@Target.Attributes"></AttributeTile>
        <AttributeTile Index="3" Name="Scaler" Text="@Scaler" Attributes="@Target.Attributes" Updated="@(e => Scaler = Convert.ToString(e))"></AttributeTile>
        <AttributeTile Index="3" Name="Unit" Text="@Unit" Values="@Units" Attributes="@Target.Attributes" Updated="@(e => Unit = Convert.ToString(e))"></AttributeTile>
        @ChildContent
    </CascadingValue>
}

@code {
    private GXDLMSRegister _register = new();

    [CascadingParameter]
    private ObjectView Parent { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    string[] Units;

    /// <summary>
    /// Target COSEM object.
    ///</summary>
    [Parameter]
    public GXObject Target { get; set; }

    void Reset()
    {
        Parent.OnAction(1, (sbyte)0);
    }

    /// <summary>
    /// Register scaler.
    /// </summary>
    [Parameter]
    public string Scaler
    {
        get
        {
            ObjectView.GetValue(Target, _register, 3);
            return _register.Scaler.ToString();
        }
        set
        {
            _register.Scaler = double.Parse(value);
            ObjectView.SetValue(Target, _register, 3);
        }
    }

    /// <summary>
    /// Register unit.
    /// </summary>
    [Parameter]
    public string Unit
    {
        get
        {
            ObjectView.GetValue(Target, _register, 3);
            return _register.Unit.ToString();
        }
        set
        {
            _register.Unit = Enum.Parse<Enums.Unit>(value);
            ObjectView.SetValue(Target, _register, 3);
        }
    }

    //Add action buttons.
    protected override void OnInitialized()
    {
        try
        {
            if (Parent == null)
            {
                throw new ArgumentNullException(nameof(Parent), "View must exist within a Object view");
            }
            Units = Enum.GetNames(typeof(Gurux.DLMS.Enums.Unit));
            Parent.MenuItems.Add(MenuItem.Create(@Properties.Resources.Reset,
                "oi oi-flash",
                Reset,
                !Parent.CanInvokeAction(1)));
        }
        catch (Exception ex)
        {
            Notifier?.ProcessError(ex);
        }
    }
}