@page "/schedulemanage"
@using Gurux.DLMS.AMI.Shared.DIs
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Gurux.DLMS.AMI.Shared.DTOs.Authentication
@using Gurux.DLMS.AMI.Shared
@using Gurux.DLMS.AMI.Shared.Enums
@using Gurux.DLMS.AMI.Shared.DTOs

@attribute [Authorize(Roles = GXRoles.Admin + "," + GXRoles.ScheduleManager + "," + GXRoles.ScheduleGroupManager + "," + GXRoles.ScheduleLog + "," + GXRoles.ScheduleLogManager)]
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IGXNotifier Notifier

<TabControl SelectionChanged="SelectionChanged" InitialTab="ActiveTab">
    <TabTextTemplate>
        <span class=@context.Icon aria-hidden="true"></span>
        @context.Text
    </TabTextTemplate>
    <ChildContent>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ScheduleManager)>
            <TabPage Text=@Properties.Resources.SchedulesTitle Icon="oi oi-timer">
                <div style="position: relative; width: 100%; ">
                    <Schedules></Schedules>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ScheduleGroupManager)>
            <TabPage Text=@Properties.Resources.ScheduleGroups Icon="oi oi-timer">
                <div style="position: relative; width: 100%; ">
                    <ScheduleGroups></ScheduleGroups>
                </div>
            </TabPage>
        </AuthorizeView>
        <AuthorizeView Roles=@GXRoles.ToString(GXRoles.Admin, GXRoles.ScheduleLog, GXRoles.ScheduleLogManager)>
            <TabPage Text=@Properties.Resources.ScheduleLogs Icon="oi oi-warning">
                <div style="position: relative; width: 100%; ">
                    <ScheduleLogs></ScheduleLogs>
                </div>
            </TabPage>
        </AuthorizeView>
    </ChildContent>
</TabControl>
<br />
@code {

    private int ActiveTab { get; set; } = 0;

    /// <summary>
    /// User has selected a new tab.
    /// </summary>
    /// <param name="index">Tab index.</param>
    void SelectionChanged(int index)
    {
        Notifier.RemoveLastPage();
        Notifier.UpdateData(GXPages.ScheduleManage, index);
    }

    protected override void OnInitialized()
    {
        object? data = Notifier.GetData(GXPages.ScheduleManage);
        if ((data is int value) && value != 0)
        {
            ActiveTab = value;
        }
        Notifier.ChangePage(GXPages.ScheduleManage, data, true);
    }
}

