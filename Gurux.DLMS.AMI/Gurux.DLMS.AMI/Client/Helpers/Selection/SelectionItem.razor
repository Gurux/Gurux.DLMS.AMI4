<!--
// --------------------------------------------------------------------------
//  Gurux Ltd
//
//
//
// Filename:        $HeadURL$
//
// Version:         $Revision$,
//                  $Date$
//                  $Author$
//
// Copyright (c) Gurux Ltd
//
//---------------------------------------------------------------------------
//
//  DESCRIPTION
//
// This file is a part of Gurux Device Framework.
//
// Gurux Device Framework is Open Source software; you can redistribute it
// and/or modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; version 2 of the License.
// Gurux Device Framework is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU General Public License for more details.
//
// This code is licensed under the GNU General Public License v2.
// Full text may be retrieved at http://www.gnu.org/licenses/gpl-2.0.txt
//---------------------------------------------------------------------------
-->

@using Gurux.DLMS.AMI.Shared.DTOs
@typeparam TItem
<li class="draggable" draggable="true" @ondragstart="@(() => HandleDragStart(Target))">
    <p class="description">
        @if (DataContent != null && Target != null)
        {
            @(DataContent(Target))
        }
    </p>
</li>

@code {
    [CascadingParameter]
    SelectionContainer<TItem>? Container { get; set; }

    [CascadingParameter]
    SelectionList<TItem>? List { get; set; }

    [Parameter]
    public RenderFragment<TItem>? DataContent { get; set; }

    [Parameter]
    public TItem? Target { get; set; }

    private void HandleDragStart(TItem? target)
    {
        if (Container != null && List != null)
        {
            Container.SourceList = List.Items;
            Container.Item = target;
        }
    }
}