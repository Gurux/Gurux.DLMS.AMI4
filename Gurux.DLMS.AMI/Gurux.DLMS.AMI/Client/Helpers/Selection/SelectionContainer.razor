@typeparam TItem

<div class="selection-container">
    <CascadingValue Value="this">
        @ChildContent
    </CascadingValue>
</div>

@code {
    int _pageSize = 5;

    /// <summary>
    /// Page size.
    /// </summary>
    public int PageSize
    {
        get
        {
            return _pageSize;
        }
        set
        {
            if (_pageSize < 5)
            {
                _pageSize = 5;
            }
            _pageSize = value;
        }
    }

    /// <summary>
    /// How many page links there are before and after the selected page.
    /// </summary>
    [Parameter]
    public int Spread { get; set; } = 2;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    /// <summary>
    /// Item has moved between the lists.
    /// </summary>
    [Parameter]
    public EventCallback<TItem> OnUpdated { get; set; }

    public List<TItem>? SourceList { get; set; }

    public TItem? Payload { get; set; }

    public async Task UpdateJobAsync(SelectionList<TItem> list, List<TItem> added)
    {
        StateHasChanged();
        await OnUpdated.InvokeAsync(Payload);
    }
}
